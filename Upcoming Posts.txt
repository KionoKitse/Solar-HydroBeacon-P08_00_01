
>>>>>> NEW POST: Ordering parts on Mouser <<<<<<
2020-10-15 <font color="63C0EC"><b>P08_01_00 Ordering parts on Mouser</b></font>
I'm pretty excited about the solar DC-DC converter ideas I found in my previous post. I don't have most of the components needed to make them so I decided that now is the time to get some more parts from Mouser. I'm getting:
<ul>
	<li>Solar cells</li>
	<li>ATtiny85Vs</li>
	<li>3V zeners</li>
	<li>5V zeners</li>
	<li>Schottky diodes</li>
	<li>Rectifier diodes</li>
</ul>
I'm pretty excited since I think this will probably work and help move this project forward.
<font color="63C0EC">Category:</font> Gardening
<font color="63C0EC">Tags:</font> Arduino, Domotics, Engineering, Gardening, Home Automation, P08_01_00, Plants, Software, Solar
<a href="https://kionokitse.wordpress.com/solar-hydrobeacon/">Project Page</a>


>>>>>> NEW POST: Solar power circuit <<<<<<
2020-10-15 <font color="63C0EC"><b>P08_01_00 Solar power circuit</b></font>
I finally got the eagerly awaited components from Mouser and was able to test some of the solar DC-DC converter designs that I was interested in. The most simple design is was the <a href="https://hackaday.io/project/164682-a-cheap-and-dangerous-garden-light-boost-converter/details">Randy Elwin design</a>. I quickly tried it a while back but was not able to get it to work. I didn't have much time to work with it but looking back I had my wiring wrong and the ANA608s I have work differently than the YX8051s that Randy was using. The design that I was most interested in trying was the <a href="https://dzrmo.wordpress.com/2017/01/02/garden-light-redux-aka-joule-thief-p-1/">DZRMO design</a>. It's pretty much the same thing but with a zener regulating the output voltage instead of using the ATtiny85's output pin to control the LED driver. I was also interested in the <a href="https://skootsone.yolasite.com/solar-led-msp430.php">SKootS design</a> but have not had a chance to try it yet. I was able to get the DZRMO design to work with the new components.

After my success with getting a stable voltage output I looked at some different parameters to see if it's possible to optimize the circuit a little. What I've found in testing is that the zener diode doesn't seem to be necessary always. When the ATtiny85 is doing nothing the constant voltage input hovers around 3.4V. If the microcontroller is in sleep mode this value can escalate quite quickly and easily ramp up over the max voltage. The zener will prevent this from happening by allowing the excess voltage to drain to ground. If I don't put the microcontroller to sleep, the zener won't be necessary. I haven't done any tests yet to see if the microcontroller idling uses more current than the microcontroller sleeping with the zener draining the excess current. For now though I'll skip on the zener since that would simplify the code to just not put the microcontroller in sleep mode. The other part I optimized is the capacitor size. Originally I was testing with a 1400uF capacitor but it seems to work with capacitors as low as 47uF. I tried a 10uF capacitor and fried the microcontroller while I wasn't paying attention. I also checked to see if a rectifier diode would work in place of the Schottky diode. In this case it doesn't seem to work. With the Schottky diode I'm getting about 3.4V but with the rectifier diode I'm getting about 2V. There is some wiggle room in selecting the inductor and that does seem to effect the output voltage as well but I don't have my notes on that right now.
<font color="63C0EC">Category:</font> Gardening
<font color="63C0EC">Tags:</font> Arduino, Domotics, Engineering, Gardening, Home Automation, P08_01_00, Plants, Software, Solar
<a href="https://kionokitse.wordpress.com/solar-hydrobeacon/">Project Page</a>


>>>>>> NEW POST: Prototype working <<<<<<
2020-10-15 <font color="63C0EC"><b>P08_01_00 Prototype working</b></font>
Over the weekend I was able to make some good progress and I can see this project actually coming together now. After my success with the solar power circuit I started working on an initial prototype. What I'm thinking is that the Solar HydroBeacon will charge the batteries all day. When it gets dark outside, the circuit will power on the microcontroller, sample the soil moisture and blink away night with the results. This should work pretty well because the solar LED driver will easily handle the charging and switchover to powering the microcontroller. On the microprocessor side I will need a red LED, green LED, soil moisture sensor, and a way to adjust the soil moisture threshold. The soil moisture sensor will be one of the DIY resistive sensors I've made in the past. To set the soil moisture threshold I will use a trimpot. This should work well since I can tune the trimpot to match the level of resistance that the soil moisture sensor would typically output if the soil is dry. The microcontroller will only need to compare the two values to determine which LED to turn on. Given that I will have a variable input voltage, this makes a lot of sense because the <b>analogRead</b> function is voltage dependent.  
I was able to breadboard a prototype based on the drawing below and created an AVR sketch for the microcontroller to test with. For setting the soil moisture level, I got some soil that was at the level of dryness that would typically require watering then adjusted the trimpot just until it switched from blinking green to blinking red. Next I watered the soil and checked that it was still blinking green. After the soil dried out a few days latter I came back and verified that the microcontroller was blinking red. 

Anyway lets get back to the prototype.  
<font color="63C0EC">Category:</font> Gardening
<font color="63C0EC">Tags:</font> Arduino, Domotics, Engineering, Gardening, Home Automation, P08_01_00, Plants, Software, Solar
<a href="https://kionokitse.wordpress.com/solar-hydrobeacon/">Project Page</a>
>>>>>> NEW POST: Adding a photoresistor <<<<<<

